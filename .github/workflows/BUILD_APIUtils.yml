# Workflow to test building the APIUtils project
name: Build pyproject - APIUtils
run-name: ${{ format('{0} - {1}', github.workflow, github.event_name == 'push' && github.event.head_commit.message || 'Manual Run') }}
on:
  workflow_dispatch:
    inputs:
      with_caching:
        type: boolean
        description: "Whether to cache the build for upload in a later job."
        required: true
        default: false
  workflow_call:
    inputs:
      with_caching:
        type: boolean
        description: "Whether to cache the build for upload in a later job."
        required: true
        default: false

env:
  DEPLOY_URL: ${{ vars.OGD_STAGING_HOST }}/${{ vars.API_BASE_URL }}/${{ github.event.repository.name }}/${{ github.ref_name }}/app.wsgi

jobs:

  build:
    name: Build Python Package
    concurrency:
      group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}-build
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    steps:

    # 1. Local checkout & config
    - uses: actions/checkout@v4
    - name: Get Dependencies
      uses: opengamedata/actions-setup-ogd-py-dependencies@v1.0
      with:
        python_version: ${{ vars.OGD_PYTHON_VERSION }}
    - name: Get Build Dependencies
      uses: opengamedata/setup-ogd-py-build@v2.0

    # 2. Build 
    - name: Build Package
      run: python -m build

    # 3. Cache for use by others
    - name: Cache Build for Publishing
      if: inputs.with_caching == true
      id: cache-build
      uses: actions/cache/save@v4
      with:
        key: opengamedata-api-utils-build-${{ github.run_id }}-${{ github.run_attempt }}
        path: ./dist/
    - name: Non-Cached Build
      if: inputs.with_caching != true
      run: echo "No build cached"

    # 4. Cleanup & complete
    - name: Print event type
      run: echo ${{ github.event.action }}
